---
name: Deploy
on:
  release:
    types:
      - created

jobs:
  check-requirements:
    name: Check Requirements
    runs-on: ubuntu-18.04
    steps:
      - name: Set Version Tag
        run: echo "API_TAG=$(echo $GITHUB_REF | awk -F '/' '{print $NF}')" >> $GITHUB_ENV
      - name: Check Tag Convention
        run: '[[ "${API_TAG:0:1}" == "v" ]] || exit 1'

  deploy-image:
    name: Deploy Image
    runs-on: ubuntu-18.04
    needs: check-requirements
    steps:
      - uses: actions/checkout@v2
      - uses: e1himself/goss-installation-action@v1.0.3
        with:
          version: 'v0.3.14'
      - name: Parse API Version
        run: echo "API_VERSION=$(echo $GITHUB_REF | awk -F '/' '{print $NF}' | cut -c 2-)" >> $GITHUB_ENV
      - name: Store API Version
        run: echo $API_VERSION > src/.version
      - name: Docker Login
        run: echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Build Image
        run: docker build -t steamcmd/api:latest .
      - name: Test Image
        run: dgoss run steamcmd/api:latest
      # deploy
      - name: Tag Image
        run: docker tag steamcmd/api:latest steamcmd/api:$API_VERSION
      - name: Push Image
        run: docker push steamcmd/api --all-tags

  update-readme:
    name: Update Readme
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Update Docker Hub Description
        uses: peter-evans/dockerhub-description@v2
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_REPOSITORY: steamcmd/api

  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-18.04
    needs: check-requirements
    steps:
      - uses: actions/checkout@v2
      - name: Parse API Version
        run: echo "API_VERSION=$(echo $GITHUB_REF | awk -F '/' '{print $NF}' | cut -c 2-)" >> $GITHUB_ENV
      - name: Store API Version
        run: echo $API_VERSION > src/.version
      - uses: akhileshns/heroku-deploy@v3.2.6
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: true
          docker_heroku_process_type: web

  deploy-azure:
    name: Deploy Azure
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Parse API Version
        run: echo "API_VERSION=$(echo $GITHUB_REF | awk -F '/' '{print $NF}' | cut -c 2-)" >> $GITHUB_ENV
      - name: Login via Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          images: ${{ env.CONTAINER_REGISTRY }}/nodejsapp:${{ env.API_VERSION }}

  warmup-api:
    name: Warmup API
    runs-on: ubuntu-18.04
    needs: deploy-heroku
    steps:
      - name: Call API Cold
        run: curl --connect-timeout 120 --max-time 120 https://api.steamcmd.net/v1/info/1 || true
      - name: Call API Warm
        run: curl --connect-timeout 120 --max-time 120 https://api.steamcmd.net/v1/info/1
